.TH roxboryd 1 "15 March 1999"
.SH NAME
roxboryd - really small HTTP server
.SH SYNOPSIS
.B roxboryd
.I directory
.SH DESCRIPTION
.PP
.I roxboryd
is a very small HTTP server.
It runs from inetd, which means its performance is poor.
But for low-traffic sites, it's quite adequate.
It implements all the basic features of an HTTP server, including:
.TP 3
*
Security against ".." filename snooping.
.TP 3
*
The common MIME types.
.TP 3
*
Trailing-slash redirection.
.TP 3
*
index.html
.TP 3
*
Directory listings.
.TP 3
* 
auto-creation of m3u files.
.PP
All in 150 lines of code.
.PP
To install it, add a line like this to /etc/inetd.conf:
.nf
    roxbory  stream tcp nowait nobody  /usr/local/sbin/roxboryd roxboryd dir
.fi
Make sure the path to the executable is correct, and change "dir" to be
the directory you want to serve.
Then add a line like this to /etc/services:
.nf
    roxbory   port/tcp   #Micro HTTP server
.fi
Change "port" to the port number you want to use - 80, 8000, whatever.
Then restart inetd by sending it a "HUP" signal, or rebooting.
.PP
roxboryd has been designed to permit automatic streaming of media files.
It produces a .m3u file, which a web browser can be told to pass on to a
media player (such as xmms, winamp, etc.).  If the .m3u file is passed
to the media player to be enqueued, then the media player will do the
streaming itself when it gets to that song.
.PP
This permits a user to click on a series of songs, adding each one to a
playlist in the media player. To set this up on the user side, a mailcap
entry such as:
.nf
	audio/x-mpegurl;xmms -e %s
.fi
accomplishes the right effect.
.PP
When roxboryd is asked for a directory listing, and it sees extensions of
.I .mp3
or
.I .ogg
instead of listing the file itself, it lists a file with an extension of
.I .m3u.
.PP
When roxboryd is asked for a file with the extension
.I .m3u
and no such file exists, but a corresponding media file exists, it produces a
file with a URL to the media file, and returns that as type 
.I audio/x-mpegurl.
.PP
.PP
Note that you can use roxboryd to serve HTTPS, if you like, by running
it from stunnel.
First fetch and install stunnel - FreeBSD users can just go to
/usr/ports/security/stunnel and do a "make cert ; make install".
Then as root run:
.nf
    stunnel -p /usr/local/certs/stunnel.pem -d 443 \
	-l /usr/local/sbin/roxboryd -- \
	roxboryd dir
.fi
Make sure the paths to the certificate and executable are correct, and
again don't forget to change "dir" to the directory you want to serve.
.SH HISTORY
.PP
This is based upon micro_httpd by Jef Poskanzer.
.PP
Some 64-bit fixes done by Ken Bantoft.
.SH AUTHOR
.PP
Copyright © 2005 by Michael Richardson <mcr@sandelman.ca>. 
.PP
Copyright © 1999 by Jef Poskanzer <jef@acme.com>. All rights reserved.
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
